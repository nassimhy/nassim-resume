{"version":3,"sources":["component/Fullpage.js","component/DownIcon.js","sections/TitleAndIcons.js","sections/AboutSection.js","component/SkillCard.js","component/UpScroll.js","sections/SkillSection.js","component/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","className","Component","DownIcon","onClick","style","display","flexDirection","alignItems","justifyContent","marginBottom","transform","position","bottom","left","src","icon","TitleAndIcon","data","title","subtitle","Object","keys","links","map","key","url","activeClass","to","spy","smooth","offset","duration","delay","icons","down","name","AboutSection","state","sections","items","content","SkillCard","skill","image","alt","UpScroll","width","SkillSection","eachSkill","Navbar","background","href","App","backgroundColor","changeColor","fcolor","counter","setState","color","animationInterval","snowCharacter","vMaxY","vMaxX","TitleAndIcons","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d9326220.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Fullpage.css'; \r\nclass Fullpage extends Component{\r\n    render(){ \r\n        const {children} = this.props;\r\n        return(\r\n            <div className={'fullPage ${this.props.className || \"\"}'}>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Fullpage","import React, { Component } from \"react\";\r\n\r\nconst DownIcon = (props) =>{\r\n    return(\r\n        <div onClick={props.onClick} className=\"down\" style={{\r\n            display:\"flex\",\r\n            flexDirection:\"row\",\r\n            alignItems:\"center\",\r\n            justifyContent:\"center\",\r\n            marginBottom:\"-34px\",\r\n            transform:\"translateY(-45px)\",\r\n            position:\"absolute\",\r\n            bottom:\"0\",\r\n            left:'49%'\r\n            \r\n            }}>\r\n            <img src={props.icon} />\r\n          </div>\r\n    )\r\n}\r\nexport default DownIcon;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../component/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport DownIcon from \"../component/DownIcon\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass TitleAndIcon extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"first\" >\r\n          <h1 className=\"title\">{data.title}</h1>\r\n          <div className=\"subtitle\">\r\n            <h2 className=\"subtext\" >{data.subtitle}</h2>\r\n          </div>\r\n          <div className=\"linkItems\">\r\n            {Object.keys(data.links).map(key => {\r\n              return (\r\n                <div className=\"icons\">\r\n                  <SocialIcon url={data.links[key]} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"About\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={500}\r\n          delay={100}\r\n        >\r\n          <DownIcon icon={data.icons.down} />\r\n        </Link>\r\n        <Element name=\"About\" className=\"element\"></Element>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TitleAndIcon;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../component/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport DownIcon from \"../component/DownIcon\";\r\nclass AboutSection extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"second\" >\r\n          <h3 >{data.sections[0].title}</h3>\r\n\r\n          <div className=\"pargraph\" >\r\n            <p>{data.sections[0].items[0].content}</p>\r\n          </div>\r\n        </Fullpage>\r\n        <Element name=\"Skills\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AboutSection;\r\n","import React, { Component } from \"react\";\r\nimport \"./Fullpage.css\";\r\nclass SkillCard extends Component {\r\n  render() {\r\n    const { skill } = this.props;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"image-skill\">\r\n          <img src={skill.content.image} alt=\"\" />\r\n        </div>\r\n        <div className=\"title-skill\">\r\n          <h4>{skill.content.title}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SkillCard;\r\n","import React, { Component } from \"react\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass UpScroll extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"Home\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={500}\r\n          delay={0}\r\n        >\r\n          <img\r\n            src=\"./image/arrow-up.png\"\r\n            style={{\r\n              width: \"30px\"\r\n            }}\r\n          />\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpScroll;","import React, { Component } from \"react\";\r\nimport Fullpage from \"../component/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport SkillCard from \"../component/SkillCard\";\r\nimport UpScroll from \"../component/UpScroll\";\r\nclass SkillSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"first\" >\r\n          <h3 className=\"h3\">{data.sections[1].title}</h3>\r\n\r\n          <div className=\"cardWrapper\">\r\n            {data.sections[1].items.map(eachSkill => {\r\n              return <SkillCard skill={eachSkill} />;\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <UpScroll />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SkillSection;\r\n","import React, { Component } from \"react\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport \"./Navbar.css\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\" style={{ background: \"transparent\" }}>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"About\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={500}\r\n          delay={0}\r\n        >\r\n          <a href=\"#\">About</a>\r\n        </Link>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"Skills\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={500}\r\n        >\r\n          <a href=\"#\">Skills</a>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\nimport data from \"./data.json\";\nimport \"./App.css\";\nimport { SocialIcon } from \"react-social-icons\";\nimport Fullpage from \"./component/Fullpage\";\nimport TitleAndIcons from \"./sections/TitleAndIcons\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport Navbar from \"./component/Navbar\";\nimport SnowStorm from \"react-snowstorm\";\nimport { Link, Element } from \"react-scroll\";\nclass App extends Component {\n  state = {\n    backgroundColor: \"rgb(242, 242, 242);\"\n  };\n  changeColor = () => {\n    const fcolor = [\"white\", \"pink\", \"green\"];\n    const bgcolor = [\"#00004d\", \"#660033\", \"yellow\"];\n    if (this.state.counter > 2) {\n      this.setState({\n        counter: 0,\n        color: fcolor[this.state.counter],\n        backgroundColor: \" rgb(242, 242, 242)\"\n      });\n    } else\n      this.setState({\n        color: fcolor[this.state.counter],\n        backgroundColor: bgcolor[this.state.counter],\n        counter: this.state.counter + 1\n      });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <SnowStorm\n          animationInterval={50}\n          snowCharacter={\"*\"}\n          vMaxY={2}\n          vMaxX={2}\n        />\n        <Element name=\"Home\" className=\"element\" />\n        <Navbar />\n        <div className=\"changetheme\">\n          <img src=\"../image/edit.png\" onClick={this.changeColor} />\n        </div>\n        <TitleAndIcons\n          color={this.state.color}\n          background={this.state.backgroundColor}\n        />\n        <AboutSection\n          color={this.state.color}\n          background={this.state.backgroundColor}\n        />\n        <SkillSection\n          color={this.state.color}\n          background={this.state.backgroundColor}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}